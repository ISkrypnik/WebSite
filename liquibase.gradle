configurations {
    liquibase
}

dependencies {
    liquibase group: 'org.liquibase.ext', name: 'liquibase-hibernate5', version: 3.8
}

//loading properties file.
Properties liquibaseProps = new Properties()
liquibaseProps.load(new FileInputStream("src/main/resources/liquibase-task.yaml"))

Properties applicationProps = new Properties()
applicationProps.load(new FileInputStream("src/main/resources/application.yaml"))

task liquibaseDiffChangelog(type: JavaExec) {
    group = "liquibase"

    classpath sourceSets.main.runtimeClasspath
    classpath configurations.liquibase
    main = "liquibase.integration.commandline.Main"

    args "--changeLogFile=" + liquibaseProps.get('path') + "generated_changelog_" + buildTimestamp() + ".yaml"
    args "--referenceUrl=hibernate:spring:" + liquibaseProps.get('path') + "?dialect=" + applicationProps.get('dialect')
    args "--referenceDriver=liquibase.ext.hibernate.database.connection.HibernateDriver"
    args "--username=" + applicationProps.get('username')
    args "--password=" + applicationProps.get('password')
    args "--url=" + applicationProps.get('url')
    args "--driver=" + applicationProps.get('driver-class-name')
    args "diffChangeLog"
}

task generateChangeLog(type: JavaExec) {
    group = "liquibase"

    classpath sourceSets.main.runtimeClasspath
    classpath configurations.liquibase
    main = "liquibase.integration.commandline.Main"

    args "--changeLogFile=" + liquibaseProps.get('path') + "generated_changelog_" + buildTimestamp() + ".yaml"
    args "--referenceUrl=hibernate:spring:" + liquibaseProps.get('package') + "?dialect=" + applicationProps.get('dialect')
    args "--referenceDriver=liquibase.ext.hibernate.database.connection.HibernateDriver"
    args "--username=" + applicationProps.get('username')
    args "--password=" + applicationProps.get('password')
    args "--url=" + applicationProps.get('url')
    args "--driver=" + applicationProps.get('driver-class-name')
    args "generateChangeLog"
}

static def buildTimestamp() {
    def date = new Date()
    def formattedDate = date.format('dd.MM.yyyy_HHmmss')
    return formattedDate
}